name: Binary

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CMAKE_BUILD_PARALLEL_LEVEL: 8

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          compiler: g++
        - os: macos-latest
          compiler: clang++
        - os: windows-latest
          compiler: cl
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install libomp (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install libomp

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      env:
        CXX: ${{ matrix.compiler }}
      run: cmake $GITHUB_WORKSPACE -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_STANDARD=11
      
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      
    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        retention-days: 1
        path: |
          ${{github.workspace}}/build/**/Scaffolder
          ${{github.workspace}}/build/**/Scaffolder.SliceTest
          ${{github.workspace}}/build/**/Scaffolder.exe
          ${{github.workspace}}/build/**/Scaffolder.SliceTest.exe
          ${{github.workspace}}/build/**/*.dll
          ${{github.workspace}}/build/**/*.pdb
          ${{github.workspace}}/build/**/*.so
          ${{github.workspace}}/build/**/*.pyd
          ${{github.workspace}}/build/**/*.exp
          ${{github.workspace}}/build/**/*.lib
          !${{github.workspace}}/build/**/lua*
          !${{github.workspace}}/build/**/tbb*
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest
          path: ubuntu

      - uses: actions/download-artifact@v4
        with:
          name: macos-latest
          path: macos

      - uses: actions/download-artifact@v4
        with:
          name: windows-latest
          path: windows 

      - name: List files
        run: ls -R
        
      - uses: actions/upload-artifact@v4
        with:
          name: bin64
          path: ${{github.workspace}}/**

      - name: Upload Release
        uses: ncipollo/release-action@v1
        if: github.event_name == 'release'
        with:
          artifacts: bin64
          token: ${{ secrets.GITHUB_TOKEN }}
