name: PyPI Wheels (Manual) 

on:
  workflow_dispatch:
    inputs:
      upload:
        description: 'Upload to PyPI?'
        required: false
        default: false

env:
  CIBW_TEST_COMMAND: python {project}/src/python/test.py
  CIBW_TEST_REQUIRES: numpy
  CIBW_TEST_SKIP: cp310-macosx_x86_64 cp311-macosx_x86_64

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14, macos-15]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Turn off cmake option for building binary (GNU sed)
      if: contains(matrix.os, 'macos') == false
      run: |
        sed -i -e 's/"Build binary" ON/"Build binary" OFF/g' CMakeLists.txt

    - name: Turn off cmake option for building binary (BSD sed)
      if: contains(matrix.os, 'macos')
      run: |
        sed -i '' -e 's/"Build binary" ON/"Build binary" OFF/g' CMakeLists.txt

    - name: Install libomp and openblas for macos
      if: contains(matrix.os, 'macos')
      run: |
        brew install libomp
        brew install openblas
    
    - name: Build wheel
      uses: pypa/cibuildwheel@v3.0.1
      env:
        CIBW_SKIP: "*-win32 *_i686 *_aarch64 *_ppc64le *_s390x"

    - name: Show files
      run: ls -lh wheelhouse
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: wheelhouse/*.whl

  pypi-publish:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/PyScaffolder
    permissions:
      id-token: write
    if: github.event.inputs.upload != false

    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        #user: __token__
        #password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true